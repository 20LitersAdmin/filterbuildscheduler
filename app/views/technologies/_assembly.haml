-# frozen_string_literal: true

:ruby
  item = assembly.item
  item_type = assembly.item_type
  available = item.available_count
  need = assembly.quantity * @quantity
  highlight = 'color: red; font-weight: bolder; border: solid 2px red' if (available < need) && item_type != 'Component'
  total = item.price * need

%tr
  - if nesting.positive?
    %td{ colspan: nesting }
  %td.right-align
    #{item.uid} (#{assembly.depth})
  %td{ colspan: 4 - nesting }
    = item.name

  %td
    = item.supplier&.name unless item_type == 'Component'
    - if item_type == 'Part' && item.made_from_materials?
      %span
        %em
          (from #{item.material.name})
  - if action_name == 'prices'
    %td{ class: ['right-align', ('bold-text' if item_type == 'Component')] }
      = humanized_money_with_symbol item.price
  - if action_name == 'items'
    %td.right-align
      = human_number assembly.quantity
    %td.right-align{ style: highlight }
      = item.available_count
  %td.right-align
    = assembly.quantity * @quantity
  - if action_name == 'prices'
    %td{ class: ['right-align', ('bold-text' if item_type == 'Component')] }
      = humanized_money_with_symbol assembly.price
    %td{ class: ['right-align', ('bold-text' if item_type == 'Component')] }
      = humanized_money_with_symbol total

- if item_type == 'Component' && item.sub_assemblies.any?
  = render partial: 'assembly', collection: item.sub_assemblies.ascending, locals: { nesting: nesting += 1 }

