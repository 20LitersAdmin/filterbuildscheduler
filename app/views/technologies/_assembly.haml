-# frozen_string_literal: true

:ruby
  item = assembly.item
  item_type = assembly.item_type
  available = item.available_count
  goal_remainder = item.goal_remainder
  highlight = 'color: red; font-weight: bolder; border: solid 2px red' if goal_remainder > available && !item.has_sub_assemblies?

%tr
  - if nesting.positive?
    %td{ colspan: nesting }
  %td.right-align
    = item.uid
  %td{ colspan: 6 - nesting }
    = item.name
  %td
    = item.supplier&.name unless item_type == 'Component'
  %td.right-align
    = human_number available
  %td.right-align
    = human_number assembly.quantity
  %td.right-align{ style: highlight }
    = human_number goal_remainder
= render partial: 'assembly', collection: item.sub_assemblies.ascending, locals: { nesting: nesting += 1 } if item_type == 'Component' && item.sub_assemblies.any?
= render partial: 'material', object: item.material, locals: { nesting: nesting += 1, part: item } if item_type == 'Part' && item.material.present?

