-# frozen_string_literal: true

-# TODO: this should be temp, merge functionality with Order && OrderAll

:ruby
  item = assembly.item
  item_type = assembly.item_type
  available = item.available_count
  need = assembly.quantity * @goal
  highlight = 'color: red; font-weight: bolder; border: solid 2px red' if (available < need) && item_type != 'Component'
  total = item.price * need

%tr
  - if nesting.positive?
    %td{ colspan: nesting }
  %td.right-align
    #{item.uid}
  %td{ colspan: 5 - nesting }
    = item.name

  %td
    = item.supplier&.name unless item_type == 'Component'
    - if item_type == 'Part' && item.made_from_material?
      %span
        %em
          (from #{item.material.name})
  %td.right-align
    = human_number available
  %td.right-align
    TODO:
    = need - available


- if item_type == 'Component' && item.sub_assemblies.any?
  = render partial: 'assembly', collection: item.sub_assemblies.ascending, locals: { nesting: nesting += 1 }

